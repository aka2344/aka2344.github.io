<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>aka2344.github.io</title>
   
   <link>http://localhost:4000</link>
   <description>나의 코딩 이야기</description>
   <language>en-uk</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>졸업 작품_Easy Tag-2(Mapbox Android Map)</title>
	  <link>//graduproj2</link>
	  <author></author>
	  <pubDate>2020-06-11T04:25:52+09:00</pubDate>
	  <guid>//graduproj2</guid>
	  <description><![CDATA[
	     <h5 id="mapbox-android-map">Mapbox Android Map</h5>

<p>다음으로 내가 맡은 부분은 안드로이드 어플리케이션에서 Mapbox Tool을 통한 실내 지도 구현이다. 본 어플리케이션의 목적은 단순 텍스트 설명을 통한 일반적인 기자재 관리가 아니라 실제 지도 환경에서 각 건물과 방들에 대한 실내지도를 구축하고 이러한 실내지도를 통한 공간적인 관리가 이루어지는 것이다. 따라서 이를 위해 각 공간에 대한 데이터를 얻어 Mapbox 지도 위에 표현하고, 이에 대한 이벤트를 정의하여 다양한 작업들이 가능하도록 구현해야 한다.</p>

<p>먼저 건물과 공간에 대한 데이터는 연구실의 도움을 받아 구할 수 있었는데, 해당 데이터는 shp파일 형태로 구성되어 있다. 이를 Mapbox Android에서 활용하기 위해 geojson 형태로 변환하고, 데이터를 각 건물별, 층별로 나누어 구분한다. 이렇게 저장한 geojson 파일을 Mapbox Android를 통해 Layer로 구현하여 지도상에서 표현하면 다음과 같은 그림으로 나타난다.</p>

<p><img src="../assets/map.png" style="zoom:30%;" /></p>

<p>위 건물은 서울시립대학교에서 공간DB연구실이 속한 건물인 21세기관에 대한 공간데이터로 1층부터 7층까지의 각 방들로 구성된 층별 데이터를 구분하여 저장하였고, 우측 층별 버튼을 클릭하면 각 층에 해당하는 실내 지도가 출력되도록 구현하였다. 이를 구현한 코드는 다음과 같다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mapView</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">mapView</span><span class="o">);</span>
<span class="n">mapView</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
<span class="n">mapView</span><span class="o">.</span><span class="na">getMapAsync</span><span class="o">(</span><span class="k">new</span> <span class="n">OnMapReadyCallback</span><span class="o">()</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onMapReady</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="kd">final</span> <span class="n">MapboxMap</span> <span class="n">mapboxMap</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Admin_Survey_Map</span><span class="o">.</span><span class="na">this</span><span class="o">.</span><span class="na">mapboxMap</span> <span class="o">=</span> <span class="n">mapboxMap</span><span class="o">;</span>
        <span class="n">mapboxMap</span><span class="o">.</span><span class="na">setStyle</span><span class="o">(</span><span class="n">Style</span><span class="o">.</span><span class="na">MAPBOX_STREETS</span><span class="o">,</span> <span class="k">new</span> <span class="n">Style</span><span class="o">.</span><span class="na">OnStyleLoaded</span><span class="o">()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStyleLoaded</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="n">Style</span> <span class="n">style</span><span class="o">)</span> <span class="o">{</span>
               <span class="n">levelButtons</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">floor_level_buttons</span><span class="o">);</span>
               <span class="n">indoorBuildingSource</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GeoJsonSource</span><span class="o">(</span><span class="s">"indoor-building"</span><span class="o">,</span> <span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"21rooms_1_edited.geojson"</span><span class="o">));</span>
               <span class="n">indoorBuildingSource2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GeoJsonSource</span><span class="o">(</span><span class="s">"indoor-building2"</span><span class="o">,</span>
               <span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"1rooms_1.geojson"</span><span class="o">));</span>
               <span class="n">resultSource</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GeoJsonSource</span><span class="o">(</span><span class="s">"result"</span><span class="o">,</span>
               <span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"init.geojson"</span><span class="o">));</span>
               <span class="n">selectedRoom</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GeoJsonSource</span><span class="o">(</span><span class="s">"selected"</span><span class="o">,</span>
                                                <span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"init.geojson"</span><span class="o">));</span>
               <span class="n">allRooms</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GeoJsonSource</span><span class="o">(</span><span class="s">"all"</span><span class="o">,</span>
                                            <span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"all_rooms.geojson"</span><span class="o">));</span>
               <span class="n">style</span><span class="o">.</span><span class="na">addSource</span><span class="o">(</span><span class="n">indoorBuildingSource</span><span class="o">);</span>
               <span class="n">style</span><span class="o">.</span><span class="na">addSource</span><span class="o">(</span><span class="n">indoorBuildingSource2</span><span class="o">);</span>
               <span class="n">style</span><span class="o">.</span><span class="na">addSource</span><span class="o">(</span><span class="n">resultSource</span><span class="o">);</span>
               <span class="n">style</span><span class="o">.</span><span class="na">addSource</span><span class="o">(</span><span class="n">selectedRoom</span><span class="o">);</span>
               <span class="n">style</span><span class="o">.</span><span class="na">addSource</span><span class="o">(</span><span class="n">allRooms</span><span class="o">);</span>

<span class="c1">// Add the building layers since we know zoom levels in range</span>
               <span class="n">loadBuildingLayer</span><span class="o">(</span><span class="n">style</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">});</span>

                <span class="n">Button</span> <span class="n">buttonSeventhLevel</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">seventh_level_button</span><span class="o">);</span>
                <span class="n">buttonSeventhLevel</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
                    <span class="nd">@Override</span>
                    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">indoorBuildingSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"21rooms_7_edited.geojson"</span><span class="o">));</span>
                        <span class="n">resultSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">fc_7</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">});</span>

                <span class="n">Button</span> <span class="n">buttonSixthLevel</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">sixth_level_button</span><span class="o">);</span>
                <span class="n">buttonSixthLevel</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
                    <span class="nd">@Override</span>
                    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">indoorBuildingSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"21rooms_6_edited.geojson"</span><span class="o">));</span>
                        <span class="n">resultSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">fc_6</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">});</span>

                <span class="n">Button</span> <span class="n">buttonFifthLevel</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">fifth_level_button</span><span class="o">);</span>
                <span class="n">buttonFifthLevel</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
                    <span class="nd">@Override</span>
                    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">indoorBuildingSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"21rooms_5_edited.geojson"</span><span class="o">));</span>
                        <span class="n">resultSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">fc_5</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">});</span>

                <span class="o">...</span>

                <span class="n">Button</span> <span class="n">buttonGroundLevel</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">ground_level_button</span><span class="o">);</span>
                <span class="n">buttonGroundLevel</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
                    <span class="nd">@Override</span>
                    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">indoorBuildingSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"21rooms_1_edited.geojson"</span><span class="o">));</span>
                        <span class="n">indoorBuildingSource2</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"1rooms_1.geojson"</span><span class="o">));</span>
                        <span class="n">resultSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">fc_1</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">});</span>
            <span class="o">}</span>
        <span class="o">});</span>
</code></pre></div></div>

<p>코드를 보면 층별 방 데이터가 저장된 geojson 파일들을 불러와 GeojsonSource로 저장하고, 이를 Map의 Layer로 추가하여 지도에 표시하는 것을 확인할 수 있다. 이 때, 여러 개의 층에 대하여 버튼을 추가해 표시하고 싶은 층을 변경할 경우 GeojsonSource가 나타내는 Geojson 파일을 해당 층에 대한 파일로 변경하여 층별 실내지도를 구현하였다.</p>

<p>이러한 실내 지도를 활용하여 구현할 어플리케이션의 기능은 크게 3가지로 <strong>기자재</strong> <strong>위치 조회, 재물조사, 기자재 검색기능</strong>이 이에 해당한다. 각 기능에는 위의 지도 코드가 포함되며 실내 지도에서 특정 조건에 해당하는 방의 위치를 보여주는 역할을 한다</p>

<p>먼저 기자재 위치 조회기능이다. 각 기자재에는 현재 기자재가 위치한 방의 번호가 저장되어 있다. 따라서 특정 기자재의 위치를 조회할 경우 해당 방 번호를 통해 실내지도에서 기자재 위치를 표현할 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">mapView</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">mapView</span><span class="o">);</span>
        <span class="n">mapView</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
        <span class="n">mapView</span><span class="o">.</span><span class="na">getMapAsync</span><span class="o">(</span><span class="k">new</span> <span class="n">OnMapReadyCallback</span><span class="o">()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onMapReady</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="kd">final</span> <span class="n">MapboxMap</span> <span class="n">mapboxMap</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">Admin_ComplaintConfirm_Map</span><span class="o">.</span><span class="na">this</span><span class="o">.</span><span class="na">mapboxMap</span> <span class="o">=</span> <span class="n">mapboxMap</span><span class="o">;</span>
                <span class="n">mapboxMap</span><span class="o">.</span><span class="na">setStyle</span><span class="o">(</span><span class="n">Style</span><span class="o">.</span><span class="na">MAPBOX_STREETS</span><span class="o">,</span> <span class="k">new</span> <span class="n">Style</span><span class="o">.</span><span class="na">OnStyleLoaded</span><span class="o">()</span> <span class="o">{</span>
                    <span class="nd">@Override</span>
                    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStyleLoaded</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="n">Style</span> <span class="n">style</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">levelButtons</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">floor_level_buttons</span><span class="o">);</span>

                        <span class="n">indoorBuildingSource</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GeoJsonSource</span><span class="o">(</span>
                                <span class="s">"indoor-building"</span><span class="o">,</span> <span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"21rooms_1_edited.geojson"</span><span class="o">));</span>
                        <span class="n">indoorBuildingSource2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GeoJsonSource</span><span class="o">(</span>
                                <span class="s">"indoor-building2"</span><span class="o">,</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"1rooms_1.geojson"</span><span class="o">));</span>
                        <span class="n">resultSource</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GeoJsonSource</span><span class="o">(</span><span class="s">"result"</span><span class="o">,</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"init.geojson"</span><span class="o">));</span>
                        <span class="n">allRooms</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GeoJsonSource</span><span class="o">(</span><span class="s">"all"</span><span class="o">,</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"all_rooms.geojson"</span><span class="o">));</span>
                        <span class="n">style</span><span class="o">.</span><span class="na">addSource</span><span class="o">(</span><span class="n">indoorBuildingSource</span><span class="o">);</span>
                        <span class="n">style</span><span class="o">.</span><span class="na">addSource</span><span class="o">(</span><span class="n">indoorBuildingSource2</span><span class="o">);</span>
                        <span class="n">style</span><span class="o">.</span><span class="na">addSource</span><span class="o">(</span><span class="n">resultSource</span><span class="o">);</span>
                        <span class="n">style</span><span class="o">.</span><span class="na">addSource</span><span class="o">(</span><span class="n">allRooms</span><span class="o">);</span>
<span class="c1">// Add the building layers since we know zoom levels in range</span>
                        <span class="n">loadBuildingLayer</span><span class="o">(</span><span class="n">style</span><span class="o">);</span>

                    <span class="o">}</span>
                <span class="o">});</span>

            <span class="o">}</span>
        <span class="o">});</span>


        <span class="n">mapView</span><span class="o">.</span><span class="na">addOnDidFinishLoadingMapListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MapView</span><span class="o">.</span><span class="na">OnDidFinishLoadingMapListener</span><span class="o">()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onDidFinishLoadingMap</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">CameraPosition</span><span class="o">&gt;</span> <span class="n">cp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">CameraPosition</span><span class="o">&gt;();</span>
                <span class="c1">// INTENT로 방 번호 받아오기</span>
                <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="n">getIntent</span><span class="o">();</span>
                <span class="kt">int</span> <span class="n">roomID</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getExtras</span><span class="o">().</span><span class="na">getString</span><span class="o">(</span><span class="s">"roomID"</span><span class="o">));</span>
                <span class="c1">// floor</span>
                <span class="n">String</span> <span class="n">floor</span> <span class="o">=</span> <span class="s">"null"</span><span class="o">;</span>
                <span class="n">String</span> <span class="n">roomname</span><span class="o">;</span>
                <span class="n">String</span> <span class="n">buildingID</span><span class="o">;</span>
                <span class="n">String</span> <span class="n">buildingName</span> <span class="o">=</span> <span class="s">"null"</span><span class="o">;</span>
                <span class="n">String</span> <span class="n">roomnumber</span><span class="o">;</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">allRooms</span><span class="o">.</span>
                    <span class="nf">querySourceFeatures</span><span class="o">(</span><span class="n">eq</span><span class="o">(</span><span class="n">get</span><span class="o">(</span><span class="s">"gid"</span><span class="o">),</span><span class="n">literal</span><span class="o">(</span><span class="n">roomID</span><span class="o">)));</span>
                <span class="n">Feature</span> <span class="n">f</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
                <span class="n">floor</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"floor"</span><span class="o">).</span><span class="na">isJsonNull</span><span class="o">()?</span>
                    <span class="s">"NULL"</span><span class="o">:</span><span class="n">f</span><span class="o">.</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"floor"</span><span class="o">).</span><span class="na">getAsString</span><span class="o">();</span>
                <span class="n">roomname</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"roomname"</span><span class="o">).</span><span class="na">isJsonNull</span><span class="o">()?</span>
                    <span class="s">"NULL"</span><span class="o">:</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"roomname"</span><span class="o">).</span><span class="na">getAsString</span><span class="o">();</span>
                <span class="n">roomnumber</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"roomnum"</span><span class="o">).</span><span class="na">isJsonNull</span><span class="o">()?</span>
                    <span class="s">"NULL"</span><span class="o">:</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"roomnum"</span><span class="o">).</span><span class="na">getAsString</span><span class="o">();</span>
                <span class="n">TextView</span> <span class="n">tv_floor</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">textView_floor</span><span class="o">);</span>
                <span class="n">TextView</span> <span class="n">tv_building</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">textView_building</span><span class="o">);</span>
                <span class="n">TextView</span> <span class="n">tv_roomnum</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">textView_roomnum</span><span class="o">);</span>
                <span class="n">TextView</span> <span class="n">tv_roomname</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">textView_roomname</span><span class="o">);</span>
                <span class="n">tv_floor</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">floor</span><span class="o">)+</span><span class="s">"층"</span><span class="o">);</span>
                <span class="n">buildingID</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"buildingid"</span><span class="o">).</span><span class="na">isJsonNull</span><span class="o">()?</span>
                    <span class="s">"NULL"</span><span class="o">:</span><span class="n">f</span><span class="o">.</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"buildingid"</span><span class="o">).</span><span class="na">getAsString</span><span class="o">();</span>
                <span class="k">if</span><span class="o">(</span><span class="n">buildingID</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"01"</span><span class="o">))</span>
                    <span class="n">buildingName</span><span class="o">=</span><span class="s">"전농관"</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">buildingID</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"15"</span><span class="o">))</span>
                    <span class="n">buildingName</span><span class="o">=</span><span class="s">"21세기관"</span><span class="o">;</span>
                <span class="n">tv_building</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">buildingName</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">roomnumber</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"NULL"</span><span class="o">))</span>
                    <span class="n">roomnumber</span> <span class="o">+=</span> <span class="s">"호"</span><span class="o">;</span>
                <span class="n">tv_roomnum</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">roomnumber</span><span class="o">);</span>
                <span class="n">tv_roomname</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">roomname</span><span class="o">);</span>
                <span class="n">CameraPosition</span> <span class="n">ps1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CameraPosition</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
                        <span class="o">.</span><span class="na">target</span><span class="o">(</span><span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">37.583452</span><span class="o">,</span><span class="mf">127.056545</span><span class="o">))</span>
                        <span class="o">.</span><span class="na">zoom</span><span class="o">(</span><span class="mi">18</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">build</span><span class="o">();</span>
                <span class="n">CameraPosition</span> <span class="n">ps2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CameraPosition</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
                        <span class="o">.</span><span class="na">target</span><span class="o">(</span><span class="k">new</span> <span class="n">LatLng</span><span class="o">(</span><span class="mf">37.583192</span><span class="o">,</span><span class="mf">127.058675</span><span class="o">))</span>
                        <span class="o">.</span><span class="na">zoom</span><span class="o">(</span><span class="mi">18</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">build</span><span class="o">();</span>
                <span class="k">if</span><span class="o">(</span><span class="n">buildingID</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"01"</span><span class="o">)){</span>
                    <span class="n">mapboxMap</span><span class="o">.</span><span class="na">setCameraPosition</span><span class="o">(</span><span class="n">ps1</span><span class="o">);</span>
                <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">buildingID</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"15"</span><span class="o">)){</span>
                    <span class="n">mapboxMap</span><span class="o">.</span><span class="na">setCameraPosition</span><span class="o">(</span><span class="n">ps2</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">if</span><span class="o">(</span><span class="n">floor</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"01"</span><span class="o">)){</span>                    <span class="n">indoorBuildingSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"21rooms_1_edited.geojson"</span><span class="o">));</span>          <span class="n">indoorBuildingSource2</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"1rooms_1.geojson"</span><span class="o">));</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">floor</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"02"</span><span class="o">)){</span>                    <span class="n">indoorBuildingSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">loadJsonFromAsset</span><span class="o">(</span><span class="s">"21rooms_2_edited.geojson"</span><span class="o">));</span>
              <span class="o">...</span>                  
                <span class="n">resultSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">f</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">});</span>
    <span class="o">}</span>
</code></pre></div></div>

<p>위 코드는 특정 방 번호를 Intent를 통해 전달받은 경우 전체 방 데이터 중 해당 방 번호를 Key로 검색하여 찾은 방을 표시하는 코드이다. 넘겨받은 RoomID로 방을 찾는데 이때 <code class="highlighter-rouge">List&lt;Feature&gt; list = allRooms.querySourceFeatures(eq(get("gid"),literal(roomID)));</code> 부분에서 RoomID를 찾게 된다. <code class="highlighter-rouge">querySourceFeatures</code>의 경우 특정 GeojsonSource가 갖고 있는 프로퍼티 중 검색하고자 하는 Key값으로 geojson에 대한 feature를 검색하는 기능이다. 여기서는 모든 방 데이터가 저장된 <code class="highlighter-rouge">allrooms</code>에서 RoomID에 해당하는 프로퍼티 gid를 Key값으로 설정하고 전달받은 RoomID를 통해 검색하도록 구현하였다. 검색 결과로 받은 feature는 <code class="highlighter-rouge">resultSource</code>에 저장되며 해당 소스가 지도 위에서 출력되도록 작동한다.</p>

<p><img src="../assets/roomposition.jpg" style="zoom:30%;" /></p>

<p>앱에서 실제 구현된 모습을 확인하면 검색결과로 나타난 방을 붉게 표현하여 해당 방의 위치를 지도 위에 표현하였고 상단부분에는 방에 대한 이름, 건물, 층, 호실과 같은 위치정보를 표현하여 사용자가 위치를 쉽게 알 수 있도록 구현하였다.</p>

<p>다음은 재물조사 기능이다. 재물조사는 재무과에서 2년에 한번씩 실시하며 학교 전체의 기자재의 수량과 상태를 파악하는 과정으로, 기자재 관리에 있어서 중요한 기능이라 할 수 있다. 기존의 방식은 기자재 목록이 작성된 실제 문서를 가지고 각 건물의 방별로 재물조사가 이루어지지 않은 방을 목록에서 일일이 확인하며 진행하였으나, 이 어플리케이션을 통해 지도상에서 재물조사 여부에 대한 현황을 표시하여 사용자에게 직관적이고 편리한 방법으로 진행할 수 있도록 구현하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mapView</span><span class="o">.</span><span class="na">addOnDidFinishLoadingMapListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MapView</span><span class="o">.</span><span class="na">OnDidFinishLoadingMapListener</span><span class="o">()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onDidFinishLoadingMap</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">CameraPosition</span><span class="o">&gt;</span> <span class="n">cp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">CameraPosition</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_1</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_2</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_3</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_4</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_5</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_6</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_7</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">String</span> <span class="n">floor</span> <span class="o">=</span> <span class="s">"null"</span><span class="o">;</span>
                <span class="n">String</span> <span class="n">roomname</span><span class="o">;</span>
                <span class="n">String</span> <span class="n">buildingID</span><span class="o">;</span>
                <span class="n">String</span> <span class="n">roomnumber</span><span class="o">;</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">roomnum</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
                    <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">allRooms</span><span class="o">.</span><span class="na">querySourceFeatures</span><span class="o">(</span><span class="n">eq</span><span class="o">(</span><span class="n">get</span><span class="o">(</span><span class="s">"gid"</span><span class="o">),</span><span class="n">literal</span><span class="o">(</span><span class="n">roomnum</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">))));</span>
                    <span class="n">floor</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"floor"</span><span class="o">).</span><span class="na">isJsonNull</span><span class="o">()?</span><span class="s">"NULL"</span><span class="o">:</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"floor"</span><span class="o">).</span><span class="na">getAsString</span><span class="o">();</span>
                    <span class="n">roomname</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"roomname"</span><span class="o">).</span><span class="na">isJsonNull</span><span class="o">()?</span><span class="s">"NULL"</span><span class="o">:</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"roomname"</span><span class="o">).</span><span class="na">getAsString</span><span class="o">();</span>
                    <span class="n">buildingID</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"buildingid"</span><span class="o">).</span><span class="na">isJsonNull</span><span class="o">()?</span><span class="s">"NULL"</span><span class="o">:</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"buildingid"</span><span class="o">).</span><span class="na">getAsString</span><span class="o">();</span>
                    <span class="n">roomnumber</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"roomnum"</span><span class="o">).</span><span class="na">isJsonNull</span><span class="o">()?</span><span class="s">"NULL"</span><span class="o">:</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"roomnum"</span><span class="o">).</span><span class="na">getAsString</span><span class="o">();</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">buildingID</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"01"</span><span class="o">))</span>
                        <span class="n">buildingID</span><span class="o">=</span><span class="s">"전농관"</span><span class="o">;</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">buildingID</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"15"</span><span class="o">))</span>
                        <span class="n">buildingID</span><span class="o">=</span><span class="s">"21세기관"</span><span class="o">;</span>
                    <span class="n">String</span> <span class="n">floorasString</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">floor</span><span class="o">))+</span><span class="s">"층"</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">roomnumber</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"NULL"</span><span class="o">))</span>
                        <span class="n">roomnumber</span> <span class="o">+=</span> <span class="s">"호"</span><span class="o">;</span>
                    <span class="n">adapter</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="n">buildingID</span><span class="o">,</span><span class="n">floorasString</span><span class="o">,</span><span class="n">roomnumber</span><span class="o">,</span><span class="n">roomname</span><span class="o">,</span><span class="n">roomnum</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">),</span><span class="n">date</span><span class="o">);</span>
                    <span class="n">adapter</span><span class="o">.</span><span class="na">notifyDataSetChanged</span><span class="o">();</span>
                    <span class="k">switch</span> <span class="o">(</span><span class="n">floor</span><span class="o">){</span>
                        <span class="k">case</span> <span class="s">"01"</span><span class="o">:</span>
                            <span class="n">list_1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="s">"02"</span><span class="o">:</span>
                            <span class="n">list_2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="s">"03"</span><span class="o">:</span>
                            <span class="n">list_3</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="s">"04"</span><span class="o">:</span>
                            <span class="n">list_4</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="s">"05"</span><span class="o">:</span>
                            <span class="n">list_5</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="s">"06"</span><span class="o">:</span>
                            <span class="n">list_6</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="s">"07"</span><span class="o">:</span>
                            <span class="n">list_7</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
                            <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>

                <span class="o">}</span>
                <span class="n">fc_1</span> <span class="o">=</span> <span class="n">FeatureCollection</span><span class="o">.</span><span class="na">fromFeatures</span><span class="o">(</span><span class="n">list_1</span><span class="o">);</span>
                <span class="n">fc_2</span> <span class="o">=</span> <span class="n">FeatureCollection</span><span class="o">.</span><span class="na">fromFeatures</span><span class="o">(</span><span class="n">list_2</span><span class="o">);</span>
                <span class="n">fc_3</span> <span class="o">=</span> <span class="n">FeatureCollection</span><span class="o">.</span><span class="na">fromFeatures</span><span class="o">(</span><span class="n">list_3</span><span class="o">);</span>
                <span class="n">fc_4</span> <span class="o">=</span> <span class="n">FeatureCollection</span><span class="o">.</span><span class="na">fromFeatures</span><span class="o">(</span><span class="n">list_4</span><span class="o">);</span>
                <span class="n">fc_5</span> <span class="o">=</span> <span class="n">FeatureCollection</span><span class="o">.</span><span class="na">fromFeatures</span><span class="o">(</span><span class="n">list_5</span><span class="o">);</span>
                <span class="n">fc_6</span> <span class="o">=</span> <span class="n">FeatureCollection</span><span class="o">.</span><span class="na">fromFeatures</span><span class="o">(</span><span class="n">list_6</span><span class="o">);</span>
                <span class="n">fc_7</span> <span class="o">=</span> <span class="n">FeatureCollection</span><span class="o">.</span><span class="na">fromFeatures</span><span class="o">(</span><span class="n">list_7</span><span class="o">);</span>

                <span class="n">resultSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">fc_1</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">});</span>
</code></pre></div></div>

<p>이 또한 앞서 기자재 위치조회에서 구현한 방식과 마찬가지로 재물조사가 진행되지 않은 방의 roomID 목록을 전달받아서 <code class="highlighter-rouge">querySourceFeatures</code>를 통해 해당 방들을 검색하여 층별 결과 collection에 저장하는 형태로 구현하였다. 따라서 지도에는 재몰조사가 완료되지 않은 방들이 앞서 저장한 collection으로 출력되며 각 층별 collection은 사용자가 표시하고자 하는 층을 클릭할 때 해당 층의 collection이 출력된다.</p>

<p><img src="../assets/surveymap.jpg" style="zoom:30%;" /></p>

<p>위 화면은 기자재 재물조사 작업 목록 중 현재 진행중인 재물조사 작업을 클릭하였을 때 해당작업에서 재물조사 현황에 대한 지도를 출력하는 액티비티로 건물의 각 층별로 기자재 재물조사가 완료되지 않은 방들이 붉은색으로 표시된 것을 확인할 수 있다. 따라서 사용자는 기자재 재물조사 시 어떤 방이 재물조사가 완료되지 않았는지 직관적이고 쉽게 알 수 있으며 이를 통해 편리한 작업이 가능해진다.</p>

<p>화면 하단에는 재물조사 미완료 방들의 목록이 출력되는데, 위치 버튼을 클릭하면 해당 방의 위치로 지도가 확대되며 목록 버튼을 클릭하면 해당 방의 기자재 목록이 출력되면서 재물조사가 진행되도록 구현하였다.</p>

<p>마지막으로 기자재 검색 기능의 경우, 기존 방식은 전산 시스템에서 해당 기자재에 대한 정보를 입력하여 검색하도록 되어있으나, 본 어플리케이션에는 보다 다양한 검색 필터를 적용하여 기자재를 검색하거나 실내 지도상에서 특정 방을 선택하여 해당 방에 속한 기자재를 공간적으로 검색하도록 구현하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">try</span> <span class="o">{</span>
                <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">roomnum</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_1</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_2</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_3</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_4</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_5</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_6</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list_7</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;();</span>
                <span class="n">JSONArray</span> <span class="n">array</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONArray</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
                <span class="n">String</span> <span class="n">floor</span><span class="o">;</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
                    <span class="n">JSONObject</span> <span class="n">object</span> <span class="o">=</span> <span class="n">array</span><span class="o">.</span><span class="na">getJSONObject</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                    <span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">object</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"name_KR"</span><span class="o">);</span>
                    <span class="n">String</span> <span class="n">equipno</span> <span class="o">=</span> <span class="n">object</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"equipNo"</span><span class="o">);</span>
                    <span class="n">roomnum</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">roomno</span><span class="o">));</span>
                    <span class="o">...</span>
                    <span class="n">adapter</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="n">ImgUrl</span><span class="o">,</span><span class="n">name</span><span class="o">,</span><span class="n">equipno</span><span class="o">,</span><span class="n">roomno</span><span class="o">,</span> <span class="n">adminID</span><span class="o">,</span> <span class="n">status</span><span class="o">,</span> <span class="n">inDate</span><span class="o">);</span>
                    <span class="n">adapter</span><span class="o">.</span><span class="na">notifyDataSetChanged</span><span class="o">();</span>
                <span class="o">}</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">roomnum</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
                    <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">allMarkers</span><span class="o">.</span><span class="na">querySourceFeatures</span>
                        <span class="o">(</span><span class="n">eq</span><span class="o">(</span><span class="n">Expression</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"gid"</span><span class="o">),</span><span class="n">literal</span><span class="o">(</span><span class="n">roomnum</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">))));</span>
                    <span class="n">floor</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"floor"</span><span class="o">).</span><span class="na">isJsonNull</span><span class="o">()?</span>
                        <span class="s">"NULL"</span><span class="o">:</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"floor"</span><span class="o">).</span><span class="na">getAsString</span><span class="o">();</span>
                    <span class="k">switch</span> <span class="o">(</span><span class="n">floor</span><span class="o">){</span>
                        <span class="k">case</span> <span class="s">"01"</span><span class="o">:</span>
                            <span class="n">list_1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="s">"02"</span><span class="o">:</span>
                            <span class="n">list_2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
                            <span class="k">break</span><span class="o">;</span>
                            <span class="o">...</span>
                    <span class="o">}</span>

                <span class="o">}</span>
                <span class="n">fc_1</span> <span class="o">=</span> <span class="n">FeatureCollection</span><span class="o">.</span><span class="na">fromFeatures</span><span class="o">(</span><span class="n">list_1</span><span class="o">);</span>
                <span class="n">fc_2</span> <span class="o">=</span> <span class="n">FeatureCollection</span><span class="o">.</span><span class="na">fromFeatures</span><span class="o">(</span><span class="n">list_2</span><span class="o">);</span>
     				<span class="o">...</span>

                <span class="k">switch</span><span class="o">(</span><span class="n">nowfloor</span><span class="o">){</span>
                    <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
                        <span class="n">resultMarkers</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">fc_1</span><span class="o">);</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
                        <span class="n">resultMarkers</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">fc_2</span><span class="o">);</span>
                        <span class="k">break</span><span class="o">;</span>
                        <span class="o">...</span>
                <span class="o">}</span>
            <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">){</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
</code></pre></div></div>

<p>위 코드는 기자재 검색 기능 중 검색 결과를 지도 위에 표현하는 코드로, 조건에 따라 기자재를 검색하였을 때 검색 결과로 전달받은 기자재들의 방 목록을 저장하여 해당 방 목록을 통해 앞서 재물조사와 마찬가지로 <code class="highlighter-rouge">querySoruceFeatures</code> 메서드로 전체 방 목록중 기자재 위치한 방들을 검색하여 지도 위에 표시하도록 구현하였다. <code class="highlighter-rouge">JSONArray array = new JSONArray(s)</code> 에서 s는 기자재 검색 결과로 전달 받은 기자재 목록에 대한 string 형 변수로 이를 JSONArray 형태로 파싱하여 각 기자재별 방 번호인 RoomID를 전달받아 <code class="highlighter-rouge">roomnum.add(Integer.parseInt(roomno))</code> 형태로 방 번호를 roomnum 리스트에 저장하고, 해당 리스트의 각 번호를 <code class="highlighter-rouge">querySourceFeatures</code>  를 통해 기자재가 위치한 방들을 찾도록 구현하였다.</p>

<p>다음으로, 사용자가 검색 필터를 설정하여 단순히 검색할 뿐만 아니라, 지도상에서 특정 방에 존재하는 기자재 목록을 찾고자 할 때 해당 방을 직접 클릭하여 기자재를 검색하는 기능을 구현하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onMapClick</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="n">LatLng</span> <span class="n">point</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">adapter</span><span class="o">.</span><span class="na">remove</span><span class="o">();</span>
        <span class="n">adapter</span><span class="o">.</span><span class="na">notifyDataSetChanged</span><span class="o">();</span>
        <span class="n">PointF</span> <span class="n">pointf</span> <span class="o">=</span> <span class="n">mapboxMap</span><span class="o">.</span><span class="na">getProjection</span><span class="o">().</span><span class="na">toScreenLocation</span><span class="o">(</span><span class="n">point</span><span class="o">);</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="n">Feature</span><span class="o">&gt;</span> <span class="n">featureList</span> <span class="o">=</span> 
            <span class="n">mapboxMap</span><span class="o">.</span><span class="na">queryRenderedFeatures</span><span class="o">(</span><span class="n">pointf</span><span class="o">,</span><span class="s">"indoor-building-fill"</span><span class="o">);</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">featureList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">featureList</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
                <span class="n">Feature</span> <span class="n">f</span> <span class="o">=</span> <span class="n">featureList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                <span class="n">selectSource</span><span class="o">.</span><span class="na">setGeoJson</span><span class="o">(</span><span class="n">f</span><span class="o">);</span>
                <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> 
          <span class="n">f</span><span class="o">.</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"gid"</span><span class="o">).</span><span class="na">isJsonNull</span><span class="o">()</span><span class="mi">0</span><span class="o">:</span><span class="n">f</span><span class="o">.</span><span class="na">properties</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"gid"</span><span class="o">).</span><span class="na">getAsInt</span><span class="o">();</span>
                <span class="n">String</span> <span class="n">url</span> <span class="o">=</span> <span class="s">"http://geodb.uos.ac.kr/qr/api/room/equipment_condt_img"</span><span class="o">;</span>
                <span class="n">JSONObject</span> <span class="n">condts</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONObject</span><span class="o">();</span>
                <span class="n">String</span> <span class="n">condt</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
                <span class="k">try</span><span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">equipment_name</span><span class="o">.</span><span class="na">getText</span><span class="o">()!=</span><span class="kc">null</span><span class="o">)</span>
                        <span class="n">condt</span> <span class="o">+=</span>
                        <span class="s">"name_KR LIKE '%"</span><span class="o">+</span><span class="n">equipment_name</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">()+</span><span class="s">"%'"</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">equipment_status</span><span class="o">.</span><span class="na">getSelectedItem</span><span class="o">().</span><span class="na">toString</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"전체"</span><span class="o">))</span>
                        <span class="n">condt</span><span class="o">+=</span>
                        <span class="s">"AND status='"</span><span class="o">+</span><span class="n">equipment_status</span><span class="o">.</span><span class="na">getSelectedItem</span><span class="o">().</span><span class="na">toString</span><span class="o">()+</span><span class="s">"'"</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">equipment_type</span><span class="o">.</span><span class="na">getSelectedItem</span><span class="o">().</span><span class="na">toString</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"전체"</span><span class="o">))</span>
                        <span class="n">condt</span><span class="o">+=</span>
                        <span class="s">"AND type='"</span><span class="o">+</span><span class="n">equipment_type</span><span class="o">.</span><span class="na">getSelectedItem</span><span class="o">().</span><span class="na">toString</span><span class="o">()+</span><span class="s">"'"</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">equipment_admin</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">))</span>
                        <span class="n">condt</span><span class="o">+=</span>
                        <span class="s">"AND adminID LIKE '%"</span><span class="o">+</span><span class="n">equipment_admin</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">()+</span><span class="s">"%'"</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">equipment_startDate</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">))</span>
                        <span class="n">condt</span><span class="o">+=</span>
                        <span class="s">"AND inDate&gt;='"</span><span class="o">+</span><span class="n">equipment_startDate</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">()+</span><span class="s">"'"</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">equipment_endDate</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">))</span>
                        <span class="n">condt</span><span class="o">+=</span>
                        <span class="s">"AND indate&lt;='"</span><span class="o">+</span><span class="n">equipment_endDate</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">()+</span><span class="s">"'"</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">equipment_name</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">))</span>
                        <span class="n">condt</span><span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span><span class="s">"AND"</span><span class="o">,</span><span class="s">""</span><span class="o">);</span>
                    <span class="n">condt</span> <span class="o">+=</span><span class="s">"AND roomID="</span><span class="o">+</span><span class="n">a</span><span class="o">;</span>
                    <span class="n">condts</span><span class="o">.</span><span class="na">accumulate</span><span class="o">(</span><span class="s">"condt"</span><span class="o">,</span><span class="n">condt</span><span class="o">);</span>
                <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">){</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                <span class="n">NetworkTask2</span> <span class="n">networkTask</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NetworkTask2</span><span class="o">(</span><span class="n">url</span><span class="o">,</span><span class="n">condts</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                <span class="n">networkTask</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></div></div>

<p>코드는 Mapbox의 지도 클릭 이벤트인 <code class="highlighter-rouge">onMapClick</code> 이벤트 메서드를 통해 방 클릭에 대한 기자재 검색 기능을 구현하였다. 변수 pointF에는 사용자가 클릭한 위치의 좌표가 저장되는데, 해당 좌표를 <code class="highlighter-rouge">queryRenderedFeatures</code> 메서드를 통해 전체 건물의 Layer에서 클릭한 방에 대한 Feature 데이터를 찾도록 되어있다. 이후 클릭한 방에 해당하는 Feature 데이터를 통해 해당 방의 roomid를 기자재 검색의 조건으로 입력하여 해당 방의 속한 기자재 목록을 조회하도록 구현하였다.</p>

<p><img src="../assets/search1.jpg" style="zoom:30%;" /></p>

<p>위 화면은 먼저 기자재 검색기능에서 사용자가 필터를 적용하고 검색버튼을 클릭하여 특정 기자재를 검색한 사진이다. 전체 기자재 중 상태가 정상인 소파를 찾고싶을 때, 위와 같이 화면 상단의 기자재 조건을 설정하고 검색하기 버튼을 클릭한 경우 화면 하단에 해당 기자재 목록이 출력되며 각 기자재가 위치한 방이 지도상에서 마커로 표시된다.</p>

<p><img src="../assets/search2.jpg" style="zoom:30%;" /></p>

<p>다음은 사용자가 특정 방을 클릭하여 해당 방에 위치한 기자재를 검색하는 사진이다. 화면의 실내지도에서 특정 방에 속한 책상 목록을 보고싶을 때, 필터를 설정하고 특정 방을 클릭하면 해당 방에 속한 책상 목록이 화면 아래 표시되는 것을 알 수있다.</p>

<hr />

<p>이 외에 다른 다양한 기능이나 보다 자세한 설명을 참고하고자 하면 아래 링크를 통해 전체 어플리케이션에 대한 설명을 확인할 수 있고, 앱을 직접 스마트폰에 설치하여 체험할 수 있다.</p>

<p><a href="https://uos-urbanscience.org/archives/uos_portfolio/easy-tag-%ea%b3%b5%ea%b0%84%eb%8d%b0%ec%9d%b4%ed%84%b0%eb%b2%a0%ec%9d%b4%ec%8a%a4%ec%99%80-qr%ec%bd%94%eb%93%9c%eb%a5%bc-%ed%99%9c%ec%9a%a9%ed%95%9c-%ea%b8%b0%ec%9e%90%ec%9e%ac-%ea%b4%80%eb%a6%ac">EasyTag 링크 바로가기</a></p>

	  ]]></description>
	</item>

	<item>
	  <title>졸업 작품_Easy Tag-1(API)</title>
	  <link>//graduproj1</link>
	  <author></author>
	  <pubDate>2020-06-10T04:25:52+09:00</pubDate>
	  <guid>//graduproj1</guid>
	  <description><![CDATA[
	     <h4 id="서론">서론</h4>

<p>학부 4학년 1학기(20.03~20.06)기간 동안 졸업 작품을 준비하고 전시했는데, 졸업 작품에서 내가 맡아서 개발한 부분에 대해 정리하여 게시하고자 한다. 졸업 작품은 조별로 프로젝트를 진행하는 형태로 최종 성과물을 완성하여 작품 전시전을 여는 형태로 진행한다.</p>

<p>우리 조는 <strong>공간DB와 QR코드를 활용한 기자재 관리 어플리케이션</strong> 라는 주제로 졸업작품을 진행하였다. 간단히 설명하자면, 기존의 불편하고 직관적이지 않은 기자재 관리 방식에서 벗어나 QR코드를 활용하여 각 기자재와 호실(방)에 대해 QR코드를 부착하여, 기자재 관리 시 QR코드를 스캔하여 DB연동을 통해 기자재 관리가 이루어지는 어플리케이션을 개발한다. 앱의 개발 배경과 목적 등에 대한 자세한 설명은 <a href="https://uos-urbanscience.org/archives/uos_portfolio/easy-tag-%ea%b3%b5%ea%b0%84%eb%8d%b0%ec%9d%b4%ed%84%b0%eb%b2%a0%ec%9d%b4%ec%8a%a4%ec%99%80-qr%ec%bd%94%eb%93%9c%eb%a5%bc-%ed%99%9c%ec%9a%a9%ed%95%9c-%ea%b8%b0%ec%9e%90%ec%9e%ac-%ea%b4%80%eb%a6%ac">졸업작품 온라인 전시 링크</a>를 통해 보다 자세히 확인할 수 있다.</p>

<p>졸업작품 개발에서 내가 맡은 부분은 API 개발과 어플리케이션의 실내 지도 구현을 담당하였는데, 이에 대한 내용을 작성하고자 한다.</p>

<h4 id="개발-과정">개발 과정</h4>

<h5 id="api">API</h5>

<p>스마트폰과 데이터베이스를 연동하기 위해서는 모바일 앱-DB간의 연동 작업이 필요한데, 이는 안드로이드에서 직접적으로 DB를 구축하여 연동하는 방식이 아닌, 별도의 웹 서버에 DB를 구축하고 이를 연동할 수 있는 API를 개발하여, 모바일 환경에서 API를 호출하여 해당 DB와 연동이 이루어지도록 설계하였다. 이는 앱에 사용되는 DB의 구조가 다소 복잡하고 데이터의 양이 많기 때문에 모바일 DB에서 처리하는데 한계가 있으므로 별도의 웹 서버를 구축하여 이를 사용하였다.</p>

<p>API의 경우 C#의 ASP.NET CORE API를 통해 개발하였다. 공간DB 연구실의 학부연구생으로 업무를 진행하면서 ASP.NET CORE API를 사용하여 개발한 경험이 있었기 때문에, 해당 API를 채택하였다.</p>

<p>ASP.NET CORE API는 MVC 형태로 구현된 REST API 구조이다. 이는 도메인에서 DB와 연동하여 데이터에 대한 조회, 수정, 삭제 등에 관한 CRUD 작업을 Model-View-Controller로 분리하여 처리하는 API형태이다. 따라서 API 설계 시 이러한 MVC 구조에 대한 설계가 필요하다.</p>

<p>먼저, Model의 경우 쿼리문의 결과로 반환되는 각 테이블의 어트리뷰트들에 해당한다. 따라서 데이터베이스에 존재하는 각 테이블들에 대한 Model을 구축한다.</p>

<div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">RoomApi.Models</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">Equipment</span><span class="p">:</span><span class="n">BaseEntity</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="n">Key</span><span class="p">]</span>
        <span class="k">public</span> <span class="kt">double</span> <span class="n">EquipNo</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">CauseNo</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Name_KR</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Name_ENG</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">ItemName</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">bool</span> <span class="n">IsDisuse</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="n">DateTime</span> <span class="n">InDate</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Price</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Type</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">LifeYear</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Status</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="n">DateTime</span> <span class="n">QR_Date</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">ETC</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">RoomID</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">UserID</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">AdminID</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>위 코드는 Equipment 클래스에 대한 코드로 데이터베이스에서 기자재가 저장되는 테이블인 Equipment에 대한 Model의 클래스이다. 클래스는 Equipment 테이블에 존재하는 각 어트리뷰트들이 프로퍼티로 정의되며, 컨트롤러에서  Equipment 테이블에서 쿼리문을 실행하여 결과값을 받을 때 Equipment 클래스의 객체로 각각의 프로퍼티를 통해 어트리뷰트 값들이 지정되어 반환된다.</p>

<p>다음으로, 이러한 Model들을 바탕으로 쿼리문을 통해 DB에 접근하여 작업을 수행하는 과정이 필요하다. 이 때, 이를 위해 MVC Pattern의  Repository Pattern을 활용한다. Repository Pattern에 대한 공식적인 정의는 다음과 같다.</p>

<p><em>“Repostory는 도메인과 데이터 매핑 계층을 중재하여 메모리 내 도메인 개체 컬렉션과 같은 역할을 한다. 클라이언트 개체는 선언적으로 쿼리 규격을 구성하고 이를 충족시키기 위해 repository에 제출한다. 개체는 단순 개체 모음에서 가능하듯이 repository에 의해 캡슐화된 매핑 코드는 뒤에서 적절한 작업을 수행한다. 개념적으로 repository는 데이터 저장소에 유지된 개체 집합과 그 위에서 수행된 작업을 캡슐화하여 지속성 계층에 대한 객체 지향적인 뷰를 제공한다. 또한, repository는 도메인과 데이터 매핑 계층간의 완전한 분리 및 단방향 종속성을 달성한다는 목표를 지원한다.”</em></p>

<p>정리하자면, repository는 데이터 저장소(DB)와 도메인을 캡슐화된 매핑 코드를 통해 중재하는 역할을 한다. 이를 통해 API에서 DB와의 연동 작업을 체계적이고 수월하게 할 수 있는 장점이 있다.</p>

<div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">RoomApi.Repository</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">EquipmentRepository</span> <span class="p">:</span> <span class="n">IRepository</span><span class="p">&lt;</span><span class="n">Equipment</span><span class="p">&gt;</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="kt">string</span> <span class="n">connectionString</span><span class="p">;</span>
        <span class="k">public</span> <span class="nf">EquipmentRepository</span><span class="p">(</span><span class="n">IConfiguration</span> <span class="n">configuration</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">connectionString</span> <span class="p">=</span> <span class="n">configuration</span><span class="p">.</span><span class="n">GetValue</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="s">"DBInfo:ConnectionString"</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">internal</span> <span class="n">IDbConnection</span> <span class="n">Connection</span>
        <span class="p">{</span>
            <span class="k">get</span>
            <span class="p">{</span>
                <span class="k">return</span> <span class="k">new</span> <span class="nf">NpgsqlConnection</span><span class="p">(</span><span class="n">connectionString</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">Add</span><span class="p">(</span><span class="n">Equipment</span> <span class="n">item</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">IDbConnection</span> <span class="n">dbConnection</span> <span class="p">=</span> <span class="n">Connection</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">dbConnection</span><span class="p">.</span><span class="nf">Open</span><span class="p">();</span>
                <span class="n">dbConnection</span><span class="p">.</span><span class="nf">Execute</span><span class="p">(</span><span class="s">"INSERT INTO Equipment (EquipNo, CauseNo, Name_KR, Name_ENG, ItemName, IsDisuse, Indate, Price, Type, LifeYear, Status, QR_Date, ETC, RoomID, UserID, AdminID) "</span> <span class="p">+</span>
                    <span class="s">"VALUES(@equipNo, @causeNo, @name_KR, @name_ENG, @itemName, @isDisuse, @indate, @price, @type, @lifeYear, @status, @qr_Date, @eTC, @roomID, @userID, @adminID)"</span><span class="p">,</span> <span class="n">item</span><span class="p">);</span>
            <span class="p">}</span>

        <span class="p">}</span>

        <span class="k">public</span> <span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">Equipment</span><span class="p">&gt;</span> <span class="nf">FindAll</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">IDbConnection</span> <span class="n">dbConnection</span> <span class="p">=</span> <span class="n">Connection</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">dbConnection</span><span class="p">.</span><span class="nf">Open</span><span class="p">();</span>
                <span class="k">return</span> <span class="n">dbConnection</span><span class="p">.</span><span class="n">Query</span><span class="p">&lt;</span><span class="n">Equipment</span><span class="p">&gt;(</span><span class="s">"SELECT * FROM Equipment"</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="n">Equipment</span> <span class="nf">FindByID</span><span class="p">(</span><span class="kt">double</span> <span class="n">equipno</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">IDbConnection</span> <span class="n">dbConnection</span> <span class="p">=</span> <span class="n">Connection</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">dbConnection</span><span class="p">.</span><span class="nf">Open</span><span class="p">();</span>
                <span class="k">return</span> <span class="n">dbConnection</span><span class="p">.</span><span class="n">Query</span><span class="p">&lt;</span><span class="n">Equipment</span><span class="p">&gt;(</span><span class="s">"SELECT * FROM equipment WHERE EquipNo = @Equipno"</span><span class="p">,</span> <span class="k">new</span> <span class="p">{</span> <span class="n">Equipno</span> <span class="p">=</span> <span class="n">equipno</span> <span class="p">}).</span><span class="nf">FirstOrDefault</span><span class="p">();</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">Equipment</span><span class="p">&gt;</span> <span class="nf">FindByCond</span><span class="p">(</span><span class="n">Condtion</span> <span class="n">condt</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">IDbConnection</span> <span class="n">dbConnection</span> <span class="p">=</span> <span class="n">Connection</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">dbConnection</span><span class="p">.</span><span class="nf">Open</span><span class="p">();</span>
                <span class="k">return</span> <span class="n">dbConnection</span><span class="p">.</span><span class="n">Query</span><span class="p">&lt;</span><span class="n">Equipment</span><span class="p">&gt;(</span><span class="s">"SELECT * FROM equipment WHERE "</span> <span class="p">+</span> <span class="n">condt</span><span class="p">.</span><span class="n">Condt</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">Remove</span><span class="p">(</span><span class="n">Equipment</span> <span class="n">item</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">IDbConnection</span> <span class="n">dbConnection</span> <span class="p">=</span> <span class="n">Connection</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">dbConnection</span><span class="p">.</span><span class="nf">Open</span><span class="p">();</span>
                <span class="n">dbConnection</span><span class="p">.</span><span class="nf">Execute</span><span class="p">(</span><span class="s">"DELETE FROM Equipment WHERE EquipNo=@Equipno"</span><span class="p">,</span> <span class="n">item</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">Update</span><span class="p">(</span><span class="n">Condtion</span> <span class="n">condt</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">IDbConnection</span> <span class="n">dbConnection</span> <span class="p">=</span> <span class="n">Connection</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">dbConnection</span><span class="p">.</span><span class="nf">Open</span><span class="p">();</span>
                <span class="n">dbConnection</span><span class="p">.</span><span class="nf">Query</span><span class="p">(</span><span class="s">"UPDATE Equipment "</span> <span class="p">+</span> <span class="n">condt</span><span class="p">.</span><span class="n">Condt</span><span class="p">);</span> <span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<p>위 코드는 Repository에 대한 예시로 앞서 설계한 Equipment(기자재)에 대한 Repository 코드이다. 기본적으로 Repository는 객체에 대한 Add, Remove, Update 등과 같은 메서드들이 정의된 IRepository 인터페이스를 상속받는 구조이다. 위 Repository를 보면 Equipment 테이블에 대한 쿼리문을 보내고, 리턴값이 있는 경우 이전에 정의한 Model 객체 Equipment의 타입으로 전달받아 이를 리턴하는 메서드로 구성되어 있다. 따라서 Repository에 정의된 메서드들을 통해 데이터베이스에 대한 조회, 수정, 삭제 등의 작업을 수행할 수 있다.</p>

<p>또한, 위 메서드들 중 FindByCond와 update와 같은 메서드를 보면 condt 객체를 사용하여 조건문을 수행하는 것을 볼 수 있다. 이는, 기본적인 형태의 쿼리문 외에도 동적으로 쿼리문을 할당하여 다양한 방식으로 연동작업을 수행하기 위함이다. Condt 객체의 경우 사용자가 정의한 조건문을 텍스트 형태로 갖는 객체이다.</p>

<p>이렇게 정의된 Repository는 Controller에서 주소 명명 규칙에 따라 해당 Repositroy의 메서드를 호출하여 DB연동 작업이 수행되도록 구현할 수 있다. 아래 코드는 Equipment(기자재)에 해당하는 Controller의 코드이다.</p>

<div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">RoomApi.Controllers</span>
<span class="p">{</span>
    <span class="p">[</span><span class="nf">Route</span><span class="p">(</span><span class="s">"api/[controller]"</span><span class="p">)]</span>
    <span class="p">[</span><span class="n">ApiController</span><span class="p">]</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">RoomController</span> <span class="p">:</span> <span class="n">Controller</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="k">readonly</span> <span class="n">EquipmentRepository</span> <span class="n">equipmentRepository</span><span class="p">;</span>
        <span class="p">...</span>

        <span class="k">public</span> <span class="nf">RoomController</span><span class="p">(</span><span class="n">IConfiguration</span> <span class="n">configuration</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">equipmentRepository</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">EquipmentRepository</span><span class="p">(</span><span class="n">configuration</span><span class="p">);</span>
            <span class="p">...</span>
        <span class="p">}</span>        

        <span class="p">[</span><span class="nf">HttpGet</span><span class="p">(</span><span class="s">"equipment"</span><span class="p">)]</span>
        <span class="k">public</span> <span class="n">IActionResult</span> <span class="nf">GetAllEquipment</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="k">new</span> <span class="nf">OkObjectResult</span><span class="p">(</span><span class="n">equipmentRepository</span><span class="p">.</span><span class="nf">FindAll</span><span class="p">());</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="nf">HttpGet</span><span class="p">(</span><span class="s">"equipment/{id}"</span><span class="p">)]</span>
        <span class="k">public</span> <span class="n">IActionResult</span> <span class="nf">GetOneEquipment</span><span class="p">(</span><span class="kt">double</span> <span class="n">id</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="k">new</span> <span class="nf">OkObjectResult</span><span class="p">(</span><span class="n">equipmentRepository</span><span class="p">.</span><span class="nf">FindByID</span><span class="p">(</span><span class="n">id</span><span class="p">));</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="nf">HttpPost</span><span class="p">(</span><span class="s">"equipment_add"</span><span class="p">)]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">AddEquipment</span><span class="p">(</span><span class="n">Equipment</span> <span class="n">item</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">equipmentRepository</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">item</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="nf">HttpPost</span><span class="p">(</span><span class="s">"equipment_delete"</span><span class="p">)]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">ReomveEquipment</span><span class="p">(</span><span class="n">Equipment</span> <span class="n">item</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">equipmentRepository</span><span class="p">.</span><span class="nf">Remove</span><span class="p">(</span><span class="n">item</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="nf">HttpPost</span><span class="p">(</span><span class="s">"equipment_update"</span><span class="p">)]</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">UpdateEquipment</span><span class="p">(</span><span class="n">Condtion</span> <span class="n">condt</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">equipmentRepository</span><span class="p">.</span><span class="nf">Update</span><span class="p">(</span><span class="n">condt</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="nf">HttpPost</span><span class="p">(</span><span class="s">"equipment_condt"</span><span class="p">)]</span>
        <span class="k">public</span> <span class="n">IActionResult</span> <span class="nf">GetEquipByCondt</span><span class="p">(</span><span class="n">Condtion</span> <span class="n">condt</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="k">new</span> <span class="nf">OkObjectResult</span><span class="p">(</span><span class="n">equipmentRepository</span><span class="p">.</span><span class="nf">FindByCond</span><span class="p">(</span><span class="n">condt</span><span class="p">));</span>
        <span class="p">}</span>
        <span class="p">...</span>

    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<p>기본적으로 컨트롤러에는 도메인에서 각 메서드에 접근할 수 있는 주소 규칙이 정의되어 있다. 루트값인 api/[Controller]는 기본 주소 형태이며<!--([Controller]부분에는 컨트롤러의 이름이 들어간다. 여기서는 Room에 해당)--> API에 할당된 IP 주소 또는 도메인에 이어서 주소가 연결된다. 예를 들어, 로컬 서버를 통해 주소로 접근하는 경우 “http://localhost:0000/api/room”이 기본 주소가 된다.</p>

<p>GetAllEquipment 메서드의 경우 [HttpGet(“equipment”)]으로 주소가 설정되어 있다. 이는 GET 방식의 HTTP 통신으로 “기본 주소/equipment”로 접근할 때 해당 메서드를 호출한다는 의미이다. 이 경우 주소는 “http://localhost:0000/api/room/equipment” 가 된다. 메서드는 EquipmentRepository의 Findall 메서드를 호출하도록 정의되어 있으며 해당 메서드는 <code class="highlighter-rouge">"SELECT * FROM equipment"</code>쿼리문을 보내 결과값으로 equipment 객체들을 넘겨받는 메서드이다. 전달받은 Equipment 객체들은 최종적으로 OkObjectResult 객체를 통해 json형태로 출력된다. 결과 예시는 아래와 같이 모든 기자재에 대한 항목이 조회된다.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
        </span><span class="s2">"equipNo"</span><span class="p">:</span><span class="mi">201056101703003</span><span class="p">,</span><span class="w">
        </span><span class="s2">"causeNo"</span><span class="p">:</span><span class="mi">2110</span><span class="p">,</span><span class="s2">"name_KR"</span><span class="p">:</span><span class="s2">"책상"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"name_ENG"</span><span class="p">:</span><span class="s2">"Desks"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"itemName"</span><span class="p">:</span><span class="s2">"책상, 크로바가구, CLV-1480T, 1400×800×720mm"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"isDisuse"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
        </span><span class="s2">"inDate"</span><span class="p">:</span><span class="s2">"2010-12-23T00:00:00"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"price"</span><span class="p">:</span><span class="mi">125000</span><span class="p">,</span><span class="w">
        </span><span class="s2">"type"</span><span class="p">:</span><span class="s2">"사무자재"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"lifeYear"</span><span class="p">:</span><span class="mi">8</span><span class="p">,</span><span class="w">
        </span><span class="s2">"status"</span><span class="p">:</span><span class="s2">"정상"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"qR_Date"</span><span class="p">:</span><span class="s2">"2020-04-24T00:00:00"</span><span class="p">,</span><span class="s2">"etc"</span><span class="p">:</span><span class="s2">"기타"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"roomID"</span><span class="p">:</span><span class="mi">2067</span><span class="p">,</span><span class="w">
        </span><span class="s2">"userID"</span><span class="p">:</span><span class="s2">"abcd1234"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"adminID"</span><span class="p">:</span><span class="s2">"uosspatial"</span><span class="w">
    </span><span class="p">},</span><span class="err">...</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre></div></div>

<p>또한, GetOneEquipment 메서드와 같이 사용자가 임의의 매개변수를 입력하여 특정 값에 해당하는 쿼리문을 질의할 수도 있다. 예를 들어, 기자재 항목 중 기자재의 고유 키인 기자재 고유 번호가 “1234”에 해당하는 항목을 조회하는 경우, 주소의 {id} 부분에 해당 번호를 넣어서 GetOneEquipment 메서드를 통해 번호를 쿼리문에 넣어 고유 번호가 “1234”인 기자재 항목 만을 넘겨받을 수 있다. 이 경우, 주소는 “http://localhost:0000/api/room/equipment/1234”가 된다.</p>

<p>Get 방식 뿐만 아니라 POST방식으로도 메서드를 정의할 수 있다. 앞서 설명한 바와 같이, Condt를 통해 임의의 조건문을 할당하여 동적 쿼리를 수행하기 위해서는 Condt 객체의 조건문에 텍스트를 할당해야 하는데, 이는 POST 방식에서 json 형태로 condt 값을 전달하여 특정 쿼리를 수행할 수 있다.</p>

<p>예를 들어, Equipment 테이블에서 기자재의 상태를 의미하는 status 어트리뷰트가 “정상”인 항목만을 조회한다고 가정하자. 이 경우, 쿼리문은 <code class="highlighter-rouge">"SELECT * FROM Equipment WHERE STATUS='정상'"</code>이 될 것이다. 하지만, 이러한 조건문에 대한 쿼리문을 사전에 사전에 모두 일일이 정의할 수 없기 때문에, WHERE 절 뒤에오는 조건문의 내용을 사용자가 직접 전달하는 형태로 정의해야 한다. 따라서, 이를 수행하는 메서드를 선언하고 조건문을 String 형태의 매개변수로 전달받아 쿼리문에 추가하도록 정의한다.</p>

<p>위 Equipment Repository의 FindByCond 메서드를 보면 매개변수로 Condt 객체를 전달받도록 정의되어 있다. 이는, String 프로퍼티인 condt를 갖는 객체 Condt를 전달받아 쿼리문에 특정 조건문을 추가할 수 있도록 하기 위함이다. 다시 컨트롤러 부분을 보면 GetEquipByCondt 메서드의 주소가 [HttpPost(“equipment_condt”)]으로 선언되어 있다. 이는 POST방식의 HTTP 통신으로 해당 주소로 데이터를 함께 전송하여 메서드가 실행되는데, 전송되는 데이트는 다음과 같은 json형태를 이루어야 한다.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="s2">"condt"</span><span class="p">:</span><span class="s2">"WHERE STATUS='정상'"</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>따라서 해당 조건문이 텍스트 형태로 전달되어 repository의 해당 메서드의 쿼리문으로 들어가 STAUTS 값이 정상인 항목만 조회할 수 있다.</p>

<p>이렇게 연동에 필요한 다양한 형태의 메서드를 정의하고 이를 GET, POST 등의 방식으로 호출하여 모바일 환경(안드로이드)에서도 웹 서버의 DB연동 작업이 이루어질 수 있다.</p>

<h3 id="다음-글mapbox-android-sdk"><a href="https://aka2344.github.io/graduproj2">다음 글(Mapbox Android SDK)</a></h3>

	  ]]></description>
	</item>

	<item>
	  <title>공학연구인턴십_ShelterFinder-2</title>
	  <link>//studyproj2</link>
	  <author></author>
	  <pubDate>2020-06-09T04:25:52+09:00</pubDate>
	  <guid>//studyproj2</guid>
	  <description><![CDATA[
	     <p>다음으로, 구축된 지도와 대피소 데이터, 도로 데이터를 기반으로 최단 경로 알고리즘을 구현하여야 한다. 먼저, 사용자의 위치를 지도 위에 표현하여야 한다. 이는 마커를 통해 사용자가 지도 위의 지점을 클릭했을 때 해당 지점으로 마커를 이동하여 사용자의 현재 위치 지점으로 설정한다.</p>

<p>사용자의 현재 위치가 설정되면, 해당 위치 인근에 위치한 대피소들을 탐색해야 한다. 이는 자바스크립트의 Turf.js 라이브러리를 활용하여 공간적인 데이터 분석 작업을 수행한다. Turf.js의 경우 Mapbox에서 연동하여 사용할 수 있는 공간 도구 라이브러리로, union, buffer, slice 등과 같은 다양한 기능을 제공한다. 이 중 buffer와 pointwithpolygon 기능을 활용하여 특정 범위 내에 속한 데이터를 추출할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">map</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">'click'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
	  <span class="k">if</span> <span class="p">(</span><span class="nx">map</span><span class="p">.</span><span class="nx">getLayer</span><span class="p">(</span><span class="s1">'path'</span><span class="p">))</span> <span class="nx">map</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="s1">'path'</span><span class="p">);</span>
      <span class="nx">marker</span><span class="p">.</span><span class="nx">setLngLat</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">lngLat</span><span class="p">);</span>
      <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"txt1"</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">lngLat</span><span class="p">.</span><span class="nx">lng</span> <span class="o">+</span> <span class="s2">", "</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">lngLat</span><span class="p">.</span><span class="nx">lat</span><span class="p">;</span>
      <span class="kd">var</span> <span class="nx">targetPoint</span> <span class="o">=</span> <span class="nx">turf</span><span class="p">.</span><span class="nx">point</span><span class="p">([</span><span class="nx">e</span><span class="p">.</span><span class="nx">lngLat</span><span class="p">.</span><span class="nx">lng</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">lngLat</span><span class="p">.</span><span class="nx">lat</span><span class="p">]);</span>
      <span class="kd">var</span> <span class="nx">shelFeatures</span> <span class="o">=</span> <span class="p">[];</span>
      <span class="kd">var</span> <span class="nx">shelter</span> <span class="o">=</span>  <span class="nx">map</span><span class="p">.</span><span class="nx">querySourceFeatures</span><span class="p">(</span><span class="s1">'shelter'</span><span class="p">,</span> <span class="p">{</span><span class="na">sourceLayer</span><span class="p">:</span> <span class="s1">'points'</span><span class="p">});</span>
      <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">shelter</span><span class="p">.</span><span class="nx">length</span> <span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
          <span class="kd">var</span> <span class="nx">cood</span> <span class="o">=</span> <span class="nx">shelter</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">geometry</span><span class="p">.</span><span class="nx">coordinates</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span>
          <span class="kd">var</span> <span class="nx">nm</span><span class="o">=</span> <span class="nx">shelter</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">properties</span><span class="p">.</span><span class="err">지진해일대</span><span class="p">;</span>
          <span class="k">if</span><span class="p">(</span><span class="nx">shelFeatures</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">(</span><span class="nx">i</span> <span class="o">=&gt;</span> <span class="nx">i</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">name</span> <span class="o">==</span> <span class="nx">nm</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">){</span>
          <span class="nx">shelFeatures</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">turf</span><span class="p">.</span><span class="nx">point</span><span class="p">([</span><span class="nx">cood</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nx">cood</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span> <span class="p">{</span><span class="na">name</span> <span class="p">:</span> <span class="nx">shelter</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">properties</span><span class="p">.</span><span class="err">지진해일대</span><span class="p">,</span> <span class="na">No</span> <span class="p">:</span> <span class="nx">shelter</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">properties</span><span class="p">.</span><span class="nx">No</span><span class="p">,</span> <span class="na">maxCap</span> <span class="p">:</span> <span class="nx">shelter</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">properties</span><span class="p">.</span><span class="err">최대수용인</span><span class="p">}));</span>
          <span class="p">}</span>
      <span class="p">}</span>
      <span class="kd">var</span> <span class="nx">points</span> <span class="o">=</span> <span class="nx">turf</span><span class="p">.</span><span class="nx">featureCollection</span><span class="p">(</span><span class="nx">shelFeatures</span><span class="p">);</span>
      <span class="kd">var</span> <span class="nx">buffered</span> <span class="o">=</span> <span class="nx">turf</span><span class="p">.</span><span class="nx">buffer</span><span class="p">(</span><span class="nx">targetPoint</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="p">{</span><span class="na">units</span><span class="p">:</span> <span class="s1">'kilometers'</span><span class="p">});</span>
      <span class="kd">var</span> <span class="nx">bufferinpoints</span> <span class="o">=</span> <span class="nx">turf</span><span class="p">.</span><span class="nx">pointsWithinPolygon</span><span class="p">(</span><span class="nx">points</span><span class="p">,</span> <span class="nx">buffered</span><span class="p">);</span>
<span class="p">...</span>
</code></pre></div></div>

<p>위 코드는 지도 페이지에서 사용자가 지도를 클릭하여 현재 위치를 설정하고 해당 위치를 기준으로 일정 범위 내에 속한 대피소들을 찾아 저장하는 코드이다. turf.buffer함수를 사용하여 사용자의 현재 위치좌표가 할당된 targetpoint에서 0.5km 범위의 버퍼 영역을 생성하고, turf.pointsWithinPolygon 함수를 사용하여 대피소 데이터들이 할당된 points에서 해당 버퍼 영역에 속한 대피소들을 추출하여 저장하도록 구현하였다. 이 코드를 통해 사용자는 지도에서 현재 위치를 클릭하면 해당 위치에서 500m이내에 속한 인근 대피소 목록을 조회할 수 있다.</p>

<p>대피소 목록들을 조회하면, 현재 위치로부터 각 대피소까지 대피하는 최단 경로들을 구해야 한다. 이는 PostGIS가 제공하는 최단 경로 분석 알고리즘을 사용하여 계산할 수 있는데, 이를 위해 자바 클래스로 해당 함수들을 구현하고, Servlet을 통해 웹에서 각각의 기능이 실행되도록 구현한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="n">String</span> <span class="nf">getShortestPath</span><span class="o">(</span><span class="kt">double</span> <span class="n">marker_lng</span><span class="o">,</span> <span class="kt">double</span> <span class="n">marker_lat</span><span class="o">,</span> <span class="kt">double</span> <span class="n">shel_lng</span><span class="o">,</span> <span class="kt">double</span> <span class="n">shel_lat</span><span class="o">){</span>
    	<span class="n">String</span> <span class="n">path</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
    	<span class="n">String</span> <span class="n">node_start</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
    	<span class="n">String</span> <span class="n">node_end</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
    	<span class="kt">double</span> <span class="n">length</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    	<span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">node_starts</span> <span class="o">=</span> <span class="n">getNearestNodes</span><span class="o">(</span><span class="n">marker_lng</span><span class="o">,</span> <span class="n">marker_lat</span><span class="o">,</span> <span class="mi">100</span><span class="o">);</span>
    	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">node_starts</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    	<span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">node_ends</span> <span class="o">=</span> <span class="n">getNearestNodes</span><span class="o">(</span><span class="n">shel_lng</span><span class="o">,</span> <span class="n">shel_lat</span><span class="o">,</span> <span class="mi">100</span><span class="o">);</span>
    	<span class="k">try</span> <span class="o">{</span>
            <span class="n">conn</span> <span class="o">=</span> <span class="n">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="n">url</span><span class="o">,</span> <span class="n">user</span><span class="o">,</span> <span class="n">password</span><span class="o">);</span>
            <span class="n">st</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">createStatement</span><span class="o">();</span>
            <span class="n">String</span> <span class="n">query</span> <span class="o">=</span> <span class="s">"SELECT sum(length_m) as length, (ST_Collect(the_Geom)) as result, start_vid, end_vid FROM pgr_dijkstra(\r\n"</span> <span class="o">+</span> 
            		<span class="s">"    'SELECT gid as id, source, target, cost, reverse_cost FROM ways',\r\n"</span> <span class="o">+</span> 
            		<span class="s">"     ARRAY"</span><span class="o">+</span><span class="n">node_starts</span><span class="o">.</span><span class="na">toString</span><span class="o">()+</span><span class="s">", ARRAY"</span><span class="o">+</span><span class="n">node_ends</span><span class="o">.</span><span class="na">toString</span><span class="o">()+</span><span class="s">"\r\n"</span> <span class="o">+</span> 
            		<span class="s">") as shortest, ways where gid=edge group by start_vid, end_vid order by sum(ways.cost) limit 1;"</span><span class="o">;</span>
            <span class="n">rs</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">(</span><span class="n">query</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">query</span><span class="o">);</span>
            <span class="k">while</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span> <span class="o">{</span>
            	<span class="n">path</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"result"</span><span class="o">);</span>
            	<span class="n">length</span> <span class="o">=</span> <span class="n">Double</span><span class="o">.</span><span class="na">parseDouble</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"length"</span><span class="o">));</span>
            	<span class="n">node_start</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"start_vid"</span><span class="o">);</span>
            	<span class="n">node_end</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"end_vid"</span><span class="o">);</span>
            	<span class="o">}</span>              
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">SQLException</span> <span class="n">sqlEX</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sqlEX</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="n">rs</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
                <span class="n">st</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
                <span class="n">conn</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">SQLException</span> <span class="n">sqlEX</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sqlEX</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">...</span>
</code></pre></div></div>

<p>위 함수는 두 개의 위도, 경도 좌표를 입력받아 좌표간의 최단 경로를 계산하도록 구현한 함수이다. 쿼리문에서 사용한 알고리즘은 다익스트라 알고리즘으로, PostgreSQL이 제공하는 공간도구 라이브러리 중 하나인 pg_routing을 통해 최단 경로를 계산하는 pgr_dijkstra 함수를 통해 계산하였다.</p>

<p>pg_routing은 노드-엣지로 구성된 그래프 형태에서 최단 경로를 계산하는 다양한 알고리즘 기능을 지원하는데, 그 중 일반적으로 많이 사용되는 다익스트라(Dijkstra) 알고리즘을 통해 도로 데이터가 노드-엣지의 그래프 형태로 저장된 ways 테이블에서 최단경로를 계산하도록 구현하였다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
  		        <span class="na">type</span><span class="p">:</span><span class="s2">"get"</span><span class="p">,</span>
  		        <span class="na">dataType</span><span class="p">:</span><span class="s2">"text"</span><span class="p">,</span>
  		        <span class="na">async</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span>  
  		        <span class="na">url</span><span class="p">:</span><span class="s2">"http://localhost:8090/ShelterFinder/action"</span><span class="p">,</span>
  		        <span class="na">data</span><span class="p">:</span> <span class="p">{</span><span class="na">m1</span><span class="p">:</span><span class="nx">marker_cood</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="na">m2</span><span class="p">:</span><span class="nx">marker_cood</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="na">t1</span><span class="p">:</span><span class="nx">t1</span><span class="p">,</span> <span class="na">t2</span><span class="p">:</span><span class="nx">t2</span><span class="p">},</span>
  		        <span class="na">beforeSend</span><span class="p">:</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    		        <span class="p">...</span>
      		      <span class="p">},</span>
  		        <span class="na">success</span><span class="p">:</span><span class="kd">function</span> <span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">textStatus</span><span class="p">){</span>     	
  		        	<span class="nx">d</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span>
  		        	<span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"txt4"</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">d</span><span class="p">[</span><span class="s1">'distance'</span><span class="p">];</span>
  		        	<span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"txt5"</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"txt4"</span><span class="p">).</span><span class="nx">value</span><span class="o">/</span><span class="mi">83</span><span class="p">;</span>
  		        	<span class="nx">map</span><span class="p">.</span><span class="nx">getSource</span><span class="p">(</span><span class="s1">'path'</span><span class="p">).</span><span class="nx">setData</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span>
  		        	<span class="nx">map</span><span class="p">.</span><span class="nx">flyTo</span><span class="p">({</span><span class="na">center</span><span class="p">:</span> <span class="p">[</span><span class="nx">t1</span><span class="p">,</span> <span class="nx">t2</span><span class="p">],</span> <span class="na">zoom</span><span class="p">:</span><span class="mf">15.5</span><span class="p">});</span>
  		        	<span class="k">if</span> <span class="p">(</span><span class="nx">map</span><span class="p">.</span><span class="nx">getLayer</span><span class="p">(</span><span class="s1">'path'</span><span class="p">))</span> <span class="nx">map</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="s1">'path'</span><span class="p">);</span>
  		  		    <span class="nx">map</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">({</span>
  		  		    	<span class="s1">'id'</span><span class="p">:</span> <span class="s1">'path'</span><span class="p">,</span>
  		  		    	<span class="s1">'type'</span><span class="p">:</span> <span class="s1">'line'</span><span class="p">,</span>
  		  		    	<span class="s1">'source'</span><span class="p">:</span> <span class="s1">'path'</span><span class="p">,</span>
  		  		    	<span class="s1">'paint'</span><span class="p">:</span> <span class="p">{</span>
  		  		    	<span class="s1">'line-color'</span><span class="p">:</span> <span class="s1">'yellow'</span><span class="p">,</span>
  		  		    	<span class="s1">'line-opacity'</span><span class="p">:</span> <span class="mf">0.75</span><span class="p">,</span>
  		  		    	<span class="s1">'line-width'</span><span class="p">:</span> <span class="mi">5</span>
  		  		    	<span class="p">}</span>
  		  		    	<span class="p">});</span>
  		  		    <span class="nx">map</span><span class="p">.</span><span class="nx">getSource</span><span class="p">(</span><span class="s1">'nearest-shelter'</span><span class="p">).</span><span class="nx">setData</span><span class="p">({</span>
  		  		      <span class="na">type</span><span class="p">:</span> <span class="s1">'FeatureCollection'</span><span class="p">,</span>
  		  		      <span class="na">features</span><span class="p">:</span> <span class="p">[</span>
  		  		      <span class="nx">nearestShelter</span>
  		  		      <span class="p">]</span>
  		  		    <span class="p">});</span>
  		  		  <span class="k">if</span> <span class="p">(</span><span class="nx">map</span><span class="p">.</span><span class="nx">getLayer</span><span class="p">(</span><span class="s1">'nearest-shelter'</span><span class="p">))</span> <span class="nx">map</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="s1">'nearest-shelter'</span><span class="p">);</span>
  		  		    <span class="nx">map</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">({</span>
  		  		      <span class="na">id</span><span class="p">:</span> <span class="s1">'nearest-shelter'</span><span class="p">,</span>
  		  		      <span class="na">type</span><span class="p">:</span> <span class="s1">'circle'</span><span class="p">,</span>
  		  		      <span class="na">source</span><span class="p">:</span> <span class="s1">'nearest-shelter'</span><span class="p">,</span>
  		  		      <span class="na">paint</span><span class="p">:</span> <span class="p">{</span>
  		  		        <span class="s1">'circle-radius'</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span>
  		  		        <span class="s1">'circle-color'</span><span class="p">:</span> <span class="s1">'#486DE0'</span>
  		  		      <span class="p">}</span>
  		  		    <span class="p">},</span> <span class="s1">'points'</span><span class="p">);</span>
  		        <span class="p">},</span>
  		        <span class="na">error</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span><span class="nx">textStatus</span><span class="p">){</span>
  		           <span class="nx">alert</span><span class="p">(</span><span class="s2">"경로탐색에 실패했습니다."</span><span class="p">);</span>
  		        <span class="p">},</span>
  		        <span class="na">complete</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span><span class="nx">textStatus</span><span class="p">){</span>
                    <span class="p">...</span>
  		        <span class="p">}</span>
  		     <span class="p">});</span>
</code></pre></div></div>

<p>위 코드는 지도 페이지에서 자바스크립트의 ajax를 통해 서블릿을 호출하여 최단 경로를 계산한 코드이다. 자바의 최단경로 계산 함수는 action 서블릿에서 실행되어 DB연동을 통해 최단 경로를 계산하도록 구현하였고, 결과값으로 나타난 최단 경로를 지도에 표시하여 해당 경로를 지도상에서 확인할 수 있도록 구현하였다.</p>

<p><img src="../assets/shortestpath.PNG" alt="shortestpath" /></p>

<p>지도 페이지에서 해당 기능을 실행하면 위와 같은 최단경로가 출력된다. 마커로 표시된 사용자의 현재 위치로부터 인근 대피소까지의 최단 경로가 계산되며, 해당 경로는 노란색으로 표시하여 사용자가 신속하게 해당 경로를 따라 대피할수 있도록 구현하였다.</p>

<p>다음으로, 지진 상황에서 건물 붕괴, 지반 침하 등의 상황 발생시 도로가 파손되어 이동이 제한되는 경우 해당 도로를 우회하여 대피소로 대피하는 상황이 발생할 수 있다. 따라서 이러한 상황 발생 시 우회된 최단 경로를 안내하여야 하므로 이동이 제한되는 도로를 지도에서 표시하고, 최단 경로 계산 시 해당 경로를 우회하여 안내하도록 설계해야 한다.</p>

<p>이는, 일반적으로 지리 데이터 분석 과정에서 최단 경로 계산 시 우회해야 하는 엣지에 대한 cost를 매우 높은 값으로 부여하여 해당 경로를 지나지 않고 최단경로를 찾도록 수행한다. 따라서 데이터베이스에서 우회해야 하는 위험 도로에 대한 cost를 매우 높은 값으로 증가시켜서 우회경로를 탐색하도록 구현한다.</p>

<p><img src="../assets/beforepath.png" alt="beforepath" style="zoom:50%;" />          <img src="../assets/afterpath.png" alt="afterpath" style="zoom:50%;" /></p>

<p>위 화면은 각각 기존 경로와 우회 경로를 탐색한 화면이다. 붉은 색 테두리의 표지판으로 표시된 우회경로가 지도상에 존재할 때, 대피소까지의 최단경로를 계산하는 경우 일반적으로 왼쪽 화면과 같이 이를 포함한 최단경로가 계산되지만, 해당 도로의 cost를 매우 높은 값으로 부여할 경우 오른쪽 화면과 같이 해당 도로를 우회하는 최단 경로를 탐색하게 된다. 따라서 이를 지진 상황에서 위험 도로를 피하여 안전한 대피 경로를 확보하는데 활용할 수 있다.</p>

<h4 id="결과">결과</h4>

<p><img src="../assets/output.jpg" alt="output" /></p>

<p>최종적으로 구현된 지진 대피소 최단경로 탐색 페이지는 위와 같다. 사용자가 지도를 클릭하여 현재 위치를 표시하면, 해당 위치에 마커가 표시되며 우측 공간에는 해당 지점으로부터 가까운 대피소 목록이 표시되고, 각각의 거리, 현재인원, 최단경로 탐색 버튼이 표시된다. 경로 탐색을 실행할 경우, 해당 대피소까지의 최단경로가 지도에 표시되며 검색결과로 대피소 위치좌표, 이동거리, 소요시간이 계산되어 출력된다.</p>

<p><img src="../assets/capacity.png" alt="capacity" /></p>

<p>특히, 대피소 데이터에는 각 대피소가 수용할 수 있는 최대 수용 인원에 대한 정보가 들어가 있는데, 이를 반영하여 현재 대피소에 대피한 현재 인원이 DB상으로 반영될 때, 대피소 조회 시 해당 인원을 출력하고 현재 인원이 최대 수용 인원을 초과한 경우 이를 구분하여 사용자에게 해당 대피소로 대피가 불가능함을 알리도록 구현하였다.</p>

<p>최종적으로, 본 연구를 통해 지진 상황 발생 시 사용자에게 현재 위치로부터 인근 대피소들을 탐색하여 안내하고 각 대피소까지 신속하고 안전하게 대피할 수 있는 대피경로를 안내하여 재난상황으로부터의 안전을 보장할 수 있다.</p>

<h4 id="한계점-및-보완사항">한계점 및 보완사항</h4>

<p>본 연구의 한계점으로는 먼저 최단 경로에 사용된 도로 데이터가 OSM에 기반한 도로 데이터를 사용하여 경로탐색을 수행하였기 때문에, 실제 지리적 환경에서 대피소까지 갈 수 있는 모든 경로를 제공하고 안내하기가 어렵다는 한계점이 있다. 이를 보완하기 위해 사람이 통행할 수 있는 도로에 대한 데이터를  수집하여 정밀한 도로 데이터를 구축해 최단 경로 탐색에 이를 활용해야 한다.</p>

<p>또한 단순히 2D 지도환경에서 대피경로를 탐색하였기 때문에 사용자가 현재 위치한 건물이나 구조물에 대한 실내 대피 경로를 안내하기가 제한된다. 따라서 단순 2차원 지리 데이터 뿐만 아니라 각 건물들에 대한 3D 실내 지도를 구축하여 이를 지진 대피 경로 안내에 활용해야 한다.</p>

<p>마지막으로 본 연구에서는 지진의 진원, 진앙, 규모,시간 등의 지진 데이터를 고려하지 않고 단순 대피경로를 탐색하였기 때문에, 실제로 이를 지진상황에서 활용하기 위해서는 실시간 재난 데이터를 반영하여 상황에 따라 유동적으로 맞춤형 경로를 제공해야 한다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>공학연구인턴십_ShelterFinder-1</title>
	  <link>//studyproj</link>
	  <author></author>
	  <pubDate>2020-06-08T04:25:52+09:00</pubDate>
	  <guid>//studyproj</guid>
	  <description><![CDATA[
	     <h4 id="서론">서론</h4>

<p>작년 12월 말~올해 2월 초(19.12~20.02) 까지 학교에서 개설된 실습인 공학연구 인턴십에 참여하게 되었다. 학과의 각 연구실별로 학생들이 방학동안 연구 주제를 가지고 연구를 진행하는 프로그램으로, 나의 경우 공간데이터베이스 연구실에서 이 프로그램을 두 달간 진행하였다.</p>

<p>공간데이터연구실에서 진행중인 연구 중 공간에 대한 지형, 위치, 높이 등과 같은 공간정보를 토대로 공간데이터베이스를 활용하여, 해당 공간에 위치한 사람들에게 긴급 상황이 발생하였을 때 가장 빠르게 탈출할 수 있는 대피 경로를 안내해 주는 연구가 있다. 연구는 실내 공간을 대상으로 실내 재실자들에게 화재 발생 시 최적의 대피경로를 제공하는 목적으로 진행중에 있다.</p>

<p>해당 연구를 참고하여, 나는 최근 우리나라에서 발생한 지진 사례들을 보고 사람들이 지진 발생 시 대피소까지 빠르게 대피해야 하는 상황이 발생하였을 때, 현재 위치에서 가장 가까운 대피소까지 대피할 수 있는 가장 빠르고 안전한 대피 경로를 찾아주면 어떨까라는 생각을 해보았다. 이러한 생각이 프로그램 또는 어플리케이션 등으로 구현된다면, 지진이 발생하였을 때 당황하지 않고 신속히 인근 대피소로 빠르게 대피하여 지진 상황을 신속하고 안전하게 대응할 수 있을 것이라고 생각하였고 이에 대한 연구 및 개발을 시작하기로 결정했다.</p>

<h4 id="설계">설계</h4>

<p>먼저 우리나라에 존재하는 지진 대피소에 대한 위치정보가 필요하다. 이를 위해 전국 지진해일 대피소 엑셀파일을 다운받았고, 이를 공간데이터 형태인 shapefile로 변환하였다. 또한, 최단 경로 분석을 위한 노드, 엣지로 구성된 데이터가 필요한데, 이는 OpenStreetMap에서 도로 데이터를 osm 파일 형식으로 추출하여 PostgreSQL의 Postgis를 통한 공간데이터 형태로 구축하였다. 본 연구에서는 범위를 서울시 영역으로 한정하여 진행하였다.</p>

<p>최단 경로 분석을 위해 다양한 지도 관련 기능을 제공하는 Mapbox gl js를 통해 기본적인 지도 기능을 구현하고,  html에서 자바스크립트를 통해 실행되도록 설계하였다. 대피소를 포함한 추가적인 공간데이터는 Geoserver를 통해 개발자의 로컬 서버에서 공간데이터를 업로드하여 Mapbox상에서 이를 불러와 사용할 수 있도록 설계하였다.</p>

<p>또한, 최단경로 분석은 PostgreSQL의 PostGIS가 제공하는 기능들을 통해 사용자의 현재 위치에서 거리상으로 가장 가까운 대피소 찾기와 해당 대피소까지 대피하는 최단경로 계산 기능을 수행하도록 설계하였다. 이러한 작업은 PostgreSQL의 데이터베이스상에서 이루어지는데, 앞서 설계한 Mapbox의 지도와의 연계를 위해 자바를 통한 DB연동을 구축하여 Servlet을 통해 서버 연동으로 이를 수행하도록 설계하였다.</p>

<p>종합적으로, 본 연구에 사용한 개발 도구들은 다음과 같다.</p>

<ul>
  <li>Mapbox GL js</li>
  <li>GeoServer</li>
  <li>PostgreSQL(PostGIS)</li>
  <li>Java(sevlet)</li>
</ul>

<h4 id="개발-과정">개발 과정</h4>

<p>앞서 설명하였듯이, 오픈 소스인 OpenStreetMap의 데이터를 이용하여 최단분석에 필요한 노드-링크 형태의 그래프 데이터를 공간데이터베이스 상에 구축하여야 한다. 기본적으로 OpenStreetMap에는 지리상으로 존재하는 도로, 인도 데이터가 포함되어 있으므로 이를 추출하여 활용할 수 있다.</p>

<p>이는 PostgreSQL의 Postgis 기능 중 하나인 osm2pgrouting을 사용하여 osm파일을 경로분석이 가능한 pgrouting의 형태로 데이터베이스에 저장하도록 실행한다. 아래 사진은 osm2pgrouting 기능에 대한 각각의 옵션과 설명이다. osm2pgrouting에 대한 자세한 설명은 <a href="https://github.com/pgRouting/osm2pgrouting/wiki/Documentation-for-osm2pgrouting-v2.2">링크</a> 를 통해 확인할 수 있다.</p>

<p><img src="../assets/OSM2PGROUTING.PNG" alt="OSM2PGROUTING" /></p>

<p>이를 실행하여 osm 데이터를 변환하면, PostgreSQL 데이터베이스에는 도로에 대한 노드, 엣지 데이터가 추출되어 아래와 같이 저장된다.</p>

<p><img src="../assets/ways.jpg" alt="ways" /></p>

<p><img src="../assets/node.jpg" alt="node" /></p>

<p>첫번째 사진은 ways 테이블로 각 도로들에 대한 주소, 좌표, 이름, 노드, 길이,  비용 등이 저장되어 있다. 두번째 사진은 ways_vertices_pgr 테이블로 각각의 노드들에 대한 주소와 좌표가 저장되어 있다.</p>

<p>이렇게 구축된 노드-링크 형태의 데이터를 gis tool(QGIS)를 통해 지도상에 표현하면 다음과 같이 나타난다.</p>

<p><img src="../assets/nodeedge.jpg" alt="노드엣지" /></p>

<p>따라서 이렇게 구축된 데이터를 통해 경로 분석이 가능한데, 특히 ways 테이블에 저장된 비용(cost) 항목을 통해 최단경로를 계산하는 알고리즘을 사용할 수 있다. 이는, 각 도로의 길이에 비례한 항목으로 도로가 길면 높은 비용을, 도로가 짧으면 낮은 비용이 저장되며 이를 통해 그래프 알고리즘에서 최단경로 계산에 사용되는 항목이 된다.</p>

<p>다음으로, 지진 대피소에 대한 데이터를 구축한다.  먼저, 공공데이터 포털에서 전국 지진해일 대피소가 있는 엑셀 파일을 다운받고, 서울시에 대한 대피소만 나누어 저장한다.</p>

<p><img src="../assets/shelter.PNG" alt="shelter" /></p>

<p>대피소 엑셀 파일에는 이름, 주소, 좌표, 수용인원, 관리기관 등에 대한 항목들이 저장되어 있는데, 여기서 좌표에 해당하는 위도와 경도값을 통해 지리상의 공간데이터로 구축이 가능하다. 위 파일을 csv로 변환하고, QGIS에 로드하면 각 대피소들이 좌표에 대응하는 위치에 표시가 되고, 이를 다시 공간데이터 형태인 shp파일로 저장한다. 위의 qgis 화면에 나와있는 shelter 포인트들이 각각의 대피소 데이터이다.</p>

<p>대피소 데이터의 경우, 경로 분석 뿐만 아니라 사용자의 지도상에서도 출력되어 각각의 위치를 확인할 수 있어야 하므로, Mapbox상의 지도에 표현되어야 한다. 앞서 저장한 대피소의 shp파일을 공간적인 json 형태인 geojson 파일로 저장하여 mapbox에 로드하여 정적 파일로서 사용할 수 있으나, 대피소의 경우 새롭게 추가되거나 기존 대피소가 폐쇄되는 경우가 발생할 경우, 이를 반영하여 긴급 상황에서도 활용하는데 한계가 존재하기 때문에, 서버에서 불러오는 형태로 데이터가 저장되어야 한다.</p>

<p>따라서, 이를 위해 별도의 서버를 구축해야 하는데, 이는 GeoServer를 통해 구현이 가능하다.</p>

<p><img src="../assets/geoserver.PNG" alt="geoserver" /></p>

<p>위 화면은 GeoServer의 메인 페이지 화면으로, 설치를 마치고 서버를 시작하면 위와 같은 메인페이지로 접속이 가능하며, 데이터 항목에서 공간데이터를 업로드 할 수 있다. 이렇게 서버에 업로드한 데이터를 WMS(World Map Service)형태로 Export하여 외부에서 사용할 수 있는데, Mapbox에서 이러한 형태로 대피소 데이터를 서버에 업로드하고 이를 불러와서 사용할 수 있다.</p>

<p><img src="../assets/mapbox map.PNG" alt="mapbox map" /></p>

<p>Mapbox API를 이용하여 기본적인 지도와 대피소 데이터를 구축하면 위와 같은 화면으로 표시된다. 이것은 HTML 소스를 통해 구현한 화면으로, 자바스크립트를 통해 mapbox의 지도 기능과 wms 를 통한 외부 데이터(대피소) 출력을 구현하였다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">map</span><span class="p">.</span><span class="nx">addSource</span><span class="p">(</span><span class="s1">'shelter'</span><span class="p">,{</span>

<span class="s1">'type'</span><span class="p">:</span> <span class="s1">'geojson'</span><span class="p">,</span>

<span class="s1">'data'</span><span class="p">:</span> <span class="s1">'http://localhost:8080/geoserver/test1/ows?service=WFS&amp;version=1.0.0&amp;request=GetFeature&amp;typeName=test1:shel_seoul&amp;maxFeatures=3000&amp;outputFormat=application/json'</span>

<span class="p">})</span>

<span class="nx">map</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span>

<span class="p">{</span>

<span class="s1">'id'</span><span class="p">:</span> <span class="s1">'points'</span><span class="p">,</span>

<span class="s1">'type'</span><span class="p">:</span> <span class="s1">'symbol'</span><span class="p">,</span>

<span class="s1">'source'</span><span class="p">:</span> <span class="s1">'shelter'</span><span class="p">,</span>

<span class="s1">'layout'</span><span class="p">:</span> <span class="p">{</span>

<span class="c1">// get the icon name from the source's "icon" property</span>

<span class="c1">// concatenate the name to get an icon from the style's sprite sheet</span>

<span class="c1">// get the title name from the source's "title" property</span>

<span class="s2">"icon-image"</span><span class="p">:</span> <span class="s2">"marker-15"</span><span class="p">,</span>

<span class="s2">"icon-size"</span><span class="p">:</span> <span class="mi">3</span>

<span class="p">}}</span> 

<span class="p">);</span>
</code></pre></div></div>

<p>위 코드는 스크립트 코드 중 대피소 데이터를 지도에 추가하는 부분인데, 코드에서 확인할 수 있듯이 wms 주소를 입력하여 해당 대피소 데이터를 mapbox 상에서의 layer 형태로 추가하는 것을 볼 수 있다. 따라서 추가된 대피소 데이터들은 마커의 형태로 지도 위에 출력된다.</p>

<h3 id="다음-글"><a href="https://aka2344.github.io/studyproj2">다음 글</a></h3>

	  ]]></description>
	</item>


</channel>
</rss>
